{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","String","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getHttpGifs","category","a","url","fetch","then","res","json","data","map","id","title","gif","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","img","useFetchGifd","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"yNAGOA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAASC,QADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAatC,OACI,sBAAMC,SAXY,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAhBmB,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,aAsB3Db,EAAYgB,UAAW,CACnBf,c,OAAcgB,EAAUC,KAAKC,YAGlBnB,Q,+BC/BFoB,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACjBC,EADiB,iDAC+BF,EAD/B,8DAEFG,MAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFzB,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAIhBA,EAAKC,KAAI,YACZ,MAAO,CACHC,GAFwD,EAA9CA,GAGVC,MAHwD,EAA1CA,MAIdC,IAJwD,EAAnCC,OAAQC,iBAAkBX,SAJhC,2CAAH,sDCUTY,EARM,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC9B,OACI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCoBDQ,EArBC,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECHL,SAACA,GAAY,IAAD,EACTnB,mBAAS,CAC/B0B,KAAK,GACLY,SAAQ,IAHuB,mBAC5BC,EAD4B,KACrBC,EADqB,KAenC,OAVAC,oBAAS,sBAAC,sBAAArB,EAAA,sDACNF,EAAYC,GACPI,MAAK,SAAAmB,GAAG,OACLF,EAAS,CACLd,KAAKgB,EACLJ,SAAQ,OALd,2CASP,CAACnB,IACGoB,EDVwBI,CAAaxB,GAAhCY,EAFgB,EAErBL,KAAaY,EAFQ,EAERA,QAEpB,OACI,sBAAKJ,UAAU,kDAAf,UACI,6BAAKf,IAEFmB,GAAW,wCAGVP,EAAOJ,KAAI,SAAAe,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAId,WEOdgB,EApBM,WAAK,IAAD,EACe5C,mBAAS,CAAC,cADzB,mBACd6C,EADc,KACF9C,EADE,KAGrB,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BAEQ8C,EAAWlB,KAAI,SAAAmB,GAAC,OAAK,cAAC,EAAD,CAAiB3B,SAAU2B,GAAbA,YCZvDC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae0c0e78.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport PropTypes from 'prop-types'\n\n const AddCategory = ({setCategories}) => {\n     const [inputValue, setInputValue] = useState(String)\n     const handleInputCHange = e => setInputValue(e.target.value);\n     const handleSubmit = e =>{\n         e.preventDefault()\n\n         if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats])\n            setInputValue('')\n         } \n       \n         \n     } \n    return (\n        <form onSubmit={handleSubmit }>\n            <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputCHange}\n           />\n        </form>\n          \n    )\n}\nAddCategory.prototype= {\n    setCategories:PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getHttpGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=5&api_key=myfK9Uc6gcogNkaCf5TAGLv4oiMt5H5d`\n    const {data} = await fetch(url).then(res => res.json()); \n    \n    return data.map(({id, title, images:{downsized_medium:{url}}})=>{\n        return {\n            id,\n            title,\n            gif:url\n        }\n    })\n}","import React from 'react'\n\n const GifGridItem = ({id, title, gif}) => {\n    return (\n        <div className=\"card \">\n            <img src={gif} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifd } from '../hooks/useFecthGifs';\n// \nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({category}) => {\n    \n    const {data:images, loading} = useFetchGifd(category);\n\n    return (\n        <div className=\"card-grid animate__animated animate__fadeInDown\">\n            <h3>{category}</h3>\n            {\n               loading && <p>Loading</p>\n            }\n            {\n                images.map(img=> (\n                    <GifGridItem \n                    key={img.id}\n                    {...img}/>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default GifGrid;","import { useState, useEffect } from \"react\"\nimport { getHttpGifs } from '../helpers/getGifs'\nexport const useFetchGifd= (category)=>{\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    });\n    useEffect(async ()=>{\n        getHttpGifs(category)\n            .then(img => \n                setstate({\n                    data:img, \n                    loading:false\n                    }\n                )\n            )\n    }, [category])\n    return state\n}","import React,{ useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\nconst GifExpertApp = ()=>{\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <> \n            <h2>GifExpertApp</h2>\n            <AddCategory \n                setCategories={setCategories}\n            />\n            <hr/>\n            <ol>\n                {\n                    categories.map(c => (<GifGrid key={c} category={c}/>))\n                }\n            </ol>\n        </>\n    )\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n    document.getElementById('root')\n);\n \n"],"sourceRoot":""}